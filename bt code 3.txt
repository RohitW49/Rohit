//SPDX-License-Identifier:MIT
pragma solidity ^0.7.0;
contract Bank{
	struct client_details{
		uint client_id;
		address client_address;
		uint client_balance;
	}
	client_details[] clients;
	address payable manager;
	uint counter =0;
	modifier onlyManager{
		require(msg.sender==manager,"Only for manager");
		_;
	}
	modifier onlyClient{
		bool isClient=false;
		for(uint i=0;i<clients.length;i++){
			if(clients[i].client_address==msg.sender){
				isClient=true;
			}
		}
		require(isClient,"Only for clients");
		_;
	}
	receive() external payable { }
	function setManager(address payable manaddr)public {
		manager=manaddr;
	}
	function joinClient()public payable{
		clients.push(client_details(counter,msg.sender,address(msg.sender).balance));
	}
	function deposit() public payable {
		payable(address(this)).transfer(msg.value);
	}
	function withdraw(uint amount)public payable {
		payable(address(msg.sender)).transfer(amount * 1 ether);
	}
	function getBalanceContract() public view returns(uint){
		return address(this).balance;
	}
}

//Output steps
//Initially All Acount has 100 fake ether
//Step 1: Select first Address (eg.0x5B38Da6a701c568545dCfcB03FcB875f56beddC4)
//Step 2: Click on Deploy button(Contract Created,Can view under Deployed 
Contract)
//After deploying contract 100 ETH turns to 99.99999. ETH
//Step 3: Set Manager: Follow Following instructions
// i.Select Onother 
Address(eg.0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2)
// ii.Copy this address 
(eg.0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2) and paste it in contract, 
infront of set Manager button
// iii. click on set manager button, Now 
Manager=0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2
//Step 4: join as Client: Follow Following instructions
// i.Select Onother
Address(eg.0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db)
// ii.Copy this address 
(eg.0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db) and paste it in contract, 
infront of joinAsClient button
// iii.click on joinAsClient button, Now 
Client=0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db
//Initially Balanve in contract Will be 0 ETH(can view in Deployed 
Contract @ Bottom)
//Step 5: Deposit:
// i.Select Client 
Address(eg.0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2)
// ii. Enter 10 ETH ammount in Value Field, Select unit as ETH from 
dropdown
// iii. Come to the Deployed Contract, Click on deposit button
// iv. 10 ETH transper to Contract , Balance will be updated to 10 
ETH in Contract
// V. 10 ETH will be minus from clients Wallet
//Step 6: Withdraw:
// i.Select Client 
Address(eg.0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2)
// ii. Enter 5 ETH ammount in front of withdrow button
// iii. Click on withdrow button
// iv. 5 ETH transper to Wallet
// V. 5 ETH will be Added to clients Wallet
//Step 7: Send Interest:
// i.Select Manager 
Address(eg.0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2)
// ii.Come to contract, Click on sendInterest button
// iii. According to logic written in code, 1 ETH as interest will be 
send to Client Wallet
//Step 8: getContract Balance:
// i.Click on getcontract balance button to view total balance
